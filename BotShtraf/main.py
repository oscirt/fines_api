import telebot
import config
import re
import time #–ê–±—É–∑
import mysql.connector

from telebot import types


bot = telebot.TeleBot(config.TOKEN)
conn = mysql.connector.connect(
       host='127.0.0.1',
       user='oscirt',
       password='12345',
       database='fines_app'
   )
user_car = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
user_ctc = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
user_car1 = ''
user_ctc1 = ''

@bot.message_handler(commands=['start'])
def welcome(message):
    stik = open('venv/maloy.webp', 'rb')
    bot.send_sticker(message.chat.id, stik)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    button1 = types.KeyboardButton('üëÆ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã –ì–ò–ë–î–î')
    button2 = types.KeyboardButton('üìñ –ü—Ä–æ—Ñ–∏–ª—å')
    markup.add(button1, button2)

    bot.send_message(message.chat.id,
                     "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {0.first_name}!\n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–≤–æ–∏ —à—Ç—Ä–∞—Ñ—ã –ì–ò–ë–î–î, "
                     "–æ–ø–ª–∞—Ç–∏—Ç—å –∏—Ö –∏ –ø–æ–ª—É—á–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ "
                     "–Ω–æ–≤—ã—Ö.".format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)


@bot.message_handler(content_types=['text'])
def messages(message):
    if message.chat.type == 'private':
        if message.text == 'üëÆ –ü—Ä–æ–≤–µ—Ä–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã –ì–ò–ë–î–î':
            bot.reply_to(message,
                             '–ü—Ä–æ–≤–µ—Ä–∫–∞ —à—Ç—Ä–∞—Ñ–æ–≤ –∑–∞–ø—É—â–µ–Ω–∞, –¥–ª—è —ç—Ç–æ–≥–æ –ø–æ–Ω–∞–¥–æ–±–∏—Ç—Å—è –≤–∞—à –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è –∏ '
                             '–Ω–æ–º–µ—Ä —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°')
            bot.send_message(message.chat.id,
                             'üöò –ü—É–Ω–∫—Ç 1/2 –ö–∞–∫–æ–π —É –≤–∞—Å –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è?\n\n –î–ª—è –ø–æ–∏—Å–∫–∞ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –Ω–∞—Ä—É—à–µ–Ω–∏–π. '
                             '–ù–∞–ø—Ä–∏–º–µ—Ä, –ê123–ë–í 123')
            bot.register_next_step_handler(message, carnumber)
        elif message.text == 'üìñ –ü—Ä–æ—Ñ–∏–ª—å':
            markup = types.InlineKeyboardMarkup()
            markup.add(types.InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –ø—Ä–æ—Ñ–∏–ª—è', callback_data='delete_profile'))
            markup.add(types.InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã', callback_data='payment')) # –î–æ–±–∞–≤–∏—Ç—å –∏—Ñ —à—Ç—Ä–∞—Ñ—ã –µ—Å—Ç—å
            bot.send_message(message.chat.id, f'{message.from_user.first_name}, –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:\n'
                                              f'–í–∞—à id: {message.from_user.id}\n'
                                              f'–í–∞—à –Ω–æ–º–µ—Ä –∞–≤—Ç–æ–º–æ–±–∏–ª—è: {user_car}\n' # –ê–±—É–∑—ã, –ø–æ—Ñ–∏–∫—Å–∏—Ç—å –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç SQL
                                              f'–í–∞—à –Ω–æ–º–µ—Ä —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°: {user_ctc}', reply_markup=markup) # –î–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ—É –æ —à—Ç—Ä–∞—Ñ–∞—Ö
        else:
            bot.send_message(message.chat.id, '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞')

def carnumber(message):
    car_number = message.text.upper()
    pattern = r'^[–ê-–Ø]{1}\d{3}[–ê-–Ø]{2}\s\d{2,3}$'
    if message.text == '/start':
        welcome(message)
    elif not re.match(pattern, car_number):
        message = bot.send_message(message.chat.id,
                                   '–ù–æ–º–µ—Ä –º–∞—à–∏–Ω—ã –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω,\n–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã')
        bot.register_next_step_handler(message, carnumber)
    else:
        global user_car1 # –ê–±—É–∑
        user_car1 = message.text # –ê–±—É–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä –ø–æ–∫–∞ –≤ –±—É—Ñ
        bot.send_message(message.chat.id,
                         'üöò –ü—É–Ω–∫—Ç 2/2 –ö–∞–∫–æ–π –Ω–æ–º–µ—Ä —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –¢–°?\n\n –î–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —à—Ç—Ä–∞—Ñ–æ–≤ —Å –∫–∞–º–µ—Ä. '
                         '–ù–∞–ø—Ä–∏–º–µ—Ä, –ú–û 123456')
        bot.register_next_step_handler(message, ctc)

def ctc(message):
    ctc_number = message.text.upper()
    pattern = r'^[–ê-–Ø]{2} \d{6}$'
    if not re.match(pattern, ctc_number):
        message = bot.send_message(message.chat.id,
                                   '–ù–æ–º–µ—Ä –°–¢–° –Ω–µ–∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω,\n–í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π –Ω–æ–º–µ—Ä –º–∞—à–∏–Ω—ã ')
        bot.register_next_step_handler(message, ctc)
    else:
        global user_ctc1 # –ê–±—É–∑
        user_ctc1 = message.text # –ê–±—É–∑, —Å–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–æ–º–µ—Ä –ø–æ–∫–∞ –≤ –±—É—Ñ
        profile_save(message)

def profile_save(message):
    markup = types.InlineKeyboardMarkup()
    button1 = types.InlineKeyboardButton('–î–∞', callback_data='save')
    button2 = types.InlineKeyboardButton('–ù–µ—Ç', callback_data='dontsave')
    markup.row(button1, button2)
    bot.send_message(message.chat.id, '–°–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –ø—Ä–æ—Ñ–∏–ª—å?', reply_markup=markup)

def fines_check(message): # –ñ–µ—Å—Ç–æ—á–∞–π—à–∏–π –∞–±—É–∑
    bot.send_message(message.chat.id, 'ü§ñ –ü—Ä–æ–≤–µ—Ä—è–µ–º —à—Ç—Ä–∞—Ñ—ã. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥–æ–∂–¥–∏—Ç–µ')
    time.sleep(5)
    bot.send_message(message.chat.id, 'üéâ –£ –≤–∞—Å –Ω–µ—Ç –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã—Ö —à—Ç—Ä–∞—Ñ–æ–≤! –ï—Å–ª–∏ –æ–Ω–∏ –ø–æ—è–≤—è—Ç—Å—è, –º—ã –≤–∞–º —Å–æ–æ–±—â–∏–º')
    markup = types.InlineKeyboardMarkup()
    markup.add(types.InlineKeyboardButton('–û–ø–ª–∞—Ç–∏—Ç—å —à—Ç—Ä–∞—Ñ—ã', callback_data='payment'))  # –î–æ–±–∞–≤–∏—Ç—å –∏—Ñ —à—Ç—Ä–∞—Ñ—ã –µ—Å—Ç—å
    bot.send_message(message.chat.id, 'üòî –£ –≤–∞—Å –µ—Å—Ç—å –Ω–µ–æ–ø–ª–∞—á–µ–Ω–Ω—ã–µ —à—Ç—Ä–∞—Ñ—ã! –û–ø–ª–∞—Ç–∏—Ç—å –º–æ–∂–Ω–æ —Å–µ–π—á–∞—Å –∏–ª–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ', reply_markup=markup)

@bot.callback_query_handler(func=lambda callback: True)
def callback_message(callback): # –ø–æ–ª–æ–≤–∏–Ω–∞ —Ñ—É–Ω–∫—Ü–∏–∏ –∞–±—É–∑—ã
    global user_ctc
    global user_ctc1
    global user_car
    global user_car1
    if callback.data == 'save': # –ê–±—É–∑
        bot.delete_message(callback.message.chat.id, callback.message.message_id)
        user_car = user_car1
        user_ctc = user_ctc1
        user_car1 = ''
        user_ctc1 = ''
        bot.send_message(callback.message.chat.id, '–î–∞–Ω–Ω—ã–µ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        fines_check(callback.message)
    elif callback.data == 'dontsave': # –ê–±—É–∑
        user_car1 = ''
        user_ctc1 = ''
        bot.send_message(callback.message.chat.id, '–î–∞–Ω–Ω—ã–µ –Ω–µ –±—É–¥—É—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã')
        fines_check(callback.message)
    elif callback.data == 'delete_profile':  # –ê–±—É–∑
        user_car = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        user_ctc = '–ù–µ—Ç –¥–∞–Ω–Ω—ã—Ö'
        bot.edit_message_reply_markup(callback.message.chat.id, callback.message.message_id)
        bot.send_message(callback.message.chat.id, '–î–∞–Ω–Ω—ã–µ —É–¥–∞–ª–µ–Ω—ã')
    elif callback.data == 'payment':
        bot.edit_message_reply_markup(callback.message.chat.id, callback.message.message_id)
        bot.send_message(callback.message.chat.id, '–ó–¥–µ—Å—å –±—É–¥–µ—Ç –æ–ø–ª–∞—Ç–∞')


bot.polling(none_stop=True)
